
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using Luban;


namespace ET
{
    [EnableClass]
    public sealed partial class MapConfig : Luban.BeanBase
    {
        public MapConfig(ByteBuf _buf) 
        {
            Id = _buf.ReadInt();
            Name = _buf.ReadString();
            Desc = _buf.ReadString();
            Type = _buf.ReadInt();
            MapVertexType = _buf.ReadInt();
            Icon = _buf.ReadString();
            MaxSumCount = _buf.ReadInt();
            Probability = _buf.ReadInt();
            SellBasePrice = _buf.ReadInt();
            BaseScore = _buf.ReadInt();
            IsEmpty = _buf.ReadInt();
            Prefab = _buf.ReadString();
            UnitID = _buf.ReadInt();
            ItemID = _buf.ReadInt();
            DestoryDays = _buf.ReadInt();

            EndInit();
        }

        public static MapConfig DeserializeMapConfig(ByteBuf _buf)
        {
            return new MapConfig(_buf);
        }

        /// <summary>
        /// Id
        /// </summary>
        public readonly int Id;
        /// <summary>
        /// 名字
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// 描述
        /// </summary>
        public readonly string Desc;
        /// <summary>
        /// 物品类型
        /// </summary>
        public readonly int Type;
        /// <summary>
        /// 地理类型
        /// </summary>
        public readonly int MapVertexType;
        /// <summary>
        /// 图标
        /// </summary>
        public readonly string Icon;
        /// <summary>
        /// 最大累加数量
        /// </summary>
        public readonly int MaxSumCount;
        /// <summary>
        /// 概率
        /// </summary>
        public readonly int Probability;
        /// <summary>
        /// 售卖的基础价格
        /// </summary>
        public readonly int SellBasePrice;
        /// <summary>
        /// 收藏积分
        /// </summary>
        public readonly int BaseScore;
        /// <summary>
        /// 是否为空
        /// </summary>
        public readonly int IsEmpty;
        /// <summary>
        /// 预制体
        /// </summary>
        public readonly string Prefab;
        /// <summary>
        /// UnitID
        /// </summary>
        public readonly int UnitID;
        /// <summary>
        /// ItemID
        /// </summary>
        public readonly int ItemID;
        /// <summary>
        /// 销毁天数
        /// </summary>
        public readonly int DestoryDays;
    
        public const int __ID__ = -1840922722;
        public override int GetTypeId() => __ID__;

        public  void ResolveRef()
        {
            EndRef();
        }

        public override string ToString()
        {
            return "{ "
            + "Id:" + Id + ","
            + "Name:" + Name + ","
            + "Desc:" + Desc + ","
            + "Type:" + Type + ","
            + "MapVertexType:" + MapVertexType + ","
            + "Icon:" + Icon + ","
            + "MaxSumCount:" + MaxSumCount + ","
            + "Probability:" + Probability + ","
            + "SellBasePrice:" + SellBasePrice + ","
            + "BaseScore:" + BaseScore + ","
            + "IsEmpty:" + IsEmpty + ","
            + "Prefab:" + Prefab + ","
            + "UnitID:" + UnitID + ","
            + "ItemID:" + ItemID + ","
            + "DestoryDays:" + DestoryDays + ","
            + "}";
        }

        partial void EndRef();
    }

}

