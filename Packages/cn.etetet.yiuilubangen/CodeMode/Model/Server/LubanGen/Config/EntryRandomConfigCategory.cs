
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using Luban;
using System.Collections.Generic;

namespace ET
{

    [Config]
    public partial class EntryRandomConfigCategory : Singleton<EntryRandomConfigCategory>, ILubanConfig
    {
        private readonly Dictionary<int, EntryRandomConfig> _dataMap;
        private readonly List<EntryRandomConfig> _dataList;
        
        public EntryRandomConfigCategory(ByteBuf _buf)
        {
            _dataMap = new Dictionary<int, EntryRandomConfig>();
            _dataList = new List<EntryRandomConfig>();
            
            for(int n = _buf.ReadSize() ; n > 0 ; --n)
            {
                EntryRandomConfig _v;
                _v = global::ET.EntryRandomConfig.DeserializeEntryRandomConfig(_buf);
                _dataList.Add(_v);
                _dataMap.Add(_v.Id, _v);
            }
            EndInit();
        }

        public Dictionary<int, EntryRandomConfig> GetAll() => _dataMap;
        public Dictionary<int, EntryRandomConfig> DataMap => _dataMap;
        public List<EntryRandomConfig> DataList => _dataList;

        public EntryRandomConfig GetOrDefault(int key) => _dataMap.GetValueOrDefault(key);

        public EntryRandomConfig Get(int key)
        {
            if (_dataMap.TryGetValue(key,out var v))
            {
                return v;
            }
            LubanLog.Error(this,key);
            return default;
        }

        public void ResolveRef()
        {
            foreach(var _v in _dataList)
            {
                _v.ResolveRef();
            }
            EndRef();
        }


        partial void EndRef();
    }

}

