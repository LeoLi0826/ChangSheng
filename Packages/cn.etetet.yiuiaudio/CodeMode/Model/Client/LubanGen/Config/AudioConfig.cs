
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using Luban;


namespace ET
{
    [EnableClass]
    public sealed partial class AudioConfig : Luban.BeanBase
    {
        public AudioConfig(ByteBuf _buf) 
        {
            GroupId = _buf.ReadString();
            {int n0 = _buf.ReadSize(); AudioNames = new System.Collections.Generic.List<string>(n0);for(var i0 = 0 ; i0 < n0 ; i0++) { string _e0;  _e0 = _buf.ReadString(); AudioNames.Add(_e0);}}
            Volume = _buf.ReadFloat();
            PlayNumMin = _buf.ReadInt();
            PlayNumMax = _buf.ReadInt();
            SpatialBlend = _buf.ReadFloat();
            DistanceMin = _buf.ReadInt();
            DistanceMax = _buf.ReadInt();
            IntervalTimeMin = _buf.ReadFloat();
            IntervalTimeMax = _buf.ReadFloat();
            NextTimeMin = _buf.ReadFloat();
            NextTimeMax = _buf.ReadFloat();

            EndInit();
        }

        public static AudioConfig DeserializeAudioConfig(ByteBuf _buf)
        {
            return new AudioConfig(_buf);
        }

        /// <summary>
        /// 配置GroupId
        /// </summary>
        public readonly string GroupId;
        /// <summary>
        /// 音频名称,号分割
        /// </summary>
        public readonly System.Collections.Generic.List<string> AudioNames;
        /// <summary>
        /// 音量大小
        /// </summary>
        public readonly float Volume;
        /// <summary>
        /// 单次播放数量
        /// </summary>
        public readonly int PlayNumMin;
        /// <summary>
        /// 单次播放数量
        /// </summary>
        public readonly int PlayNumMax;
        /// <summary>
        /// 3D音效值<br/>（值范围[0-1]，0=2D音，非0即3D音）
        /// </summary>
        public readonly float SpatialBlend;
        /// <summary>
        /// 衰减范围Min<br/>(3D音才有效)
        /// </summary>
        public readonly int DistanceMin;
        /// <summary>
        /// 衰减范围Max<br/>(3D音才有效)
        /// </summary>
        public readonly int DistanceMax;
        /// <summary>
        /// 间隔时间Min<br/>(单次播放多个音才有效)
        /// </summary>
        public readonly float IntervalTimeMin;
        /// <summary>
        /// 间隔时间Max<br/>(单次播放多个音才有效)
        /// </summary>
        public readonly float IntervalTimeMax;
        /// <summary>
        /// 下一次间隔Min
        /// </summary>
        public readonly float NextTimeMin;
        /// <summary>
        /// 下一次间隔Max
        /// </summary>
        public readonly float NextTimeMax;
    
        public const int __ID__ = 1647377048;
        public override int GetTypeId() => __ID__;

        public  void ResolveRef()
        {
            EndRef();
        }

        public override string ToString()
        {
            return "{ "
            + "groupId:" + GroupId + ","
            + "AudioNames:" + Luban.StringUtil.CollectionToString(AudioNames) + ","
            + "Volume:" + Volume + ","
            + "PlayNumMin:" + PlayNumMin + ","
            + "PlayNumMax:" + PlayNumMax + ","
            + "SpatialBlend:" + SpatialBlend + ","
            + "DistanceMin:" + DistanceMin + ","
            + "DistanceMax:" + DistanceMax + ","
            + "IntervalTimeMin:" + IntervalTimeMin + ","
            + "IntervalTimeMax:" + IntervalTimeMax + ","
            + "NextTimeMin:" + NextTimeMin + ","
            + "NextTimeMax:" + NextTimeMax + ","
            + "}";
        }

        partial void EndRef();
    }

}

