
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using Luban;


namespace ET
{
    [EnableClass]
    public sealed partial class ConditionConfig : Luban.BeanBase
    {
        public ConditionConfig(ByteBuf _buf) 
        {
            Id = (EConditionId)_buf.ReadInt();
            ConditionType = (EConditionType)_buf.ReadInt();
            Listener = _buf.ReadBool();
            CompareType = (ECompareType)_buf.ReadInt();
            DynamicCondition = _buf.ReadBool();
            CheckValue = global::ET.ConditionCheckValue.DeserializeConditionCheckValue(_buf);
            Tips = _buf.ReadString();

            EndInit();
        }

        public static ConditionConfig DeserializeConditionConfig(ByteBuf _buf)
        {
            return new ConditionConfig(_buf);
        }

        /// <summary>
        /// 条件id实例
        /// </summary>
        public readonly EConditionId Id;
        /// <summary>
        /// 条件类型
        /// </summary>
        public readonly EConditionType ConditionType;
        /// <summary>
        /// 条件可以被监听
        /// </summary>
        public readonly bool Listener;
        /// <summary>
        /// 比较类型
        /// </summary>
        public readonly ECompareType CompareType;
        /// <summary>
        /// 动态条件
        /// </summary>
        public readonly bool DynamicCondition;
        /// <summary>
        /// 判断值
        /// </summary>
        public readonly ConditionCheckValue CheckValue;
        /// <summary>
        /// 提示
        /// </summary>
        public readonly string Tips;
    
        public const int __ID__ = -1029499875;
        public override int GetTypeId() => __ID__;

        public  void ResolveRef()
        {
            CheckValue?.ResolveRef();
            EndRef();
        }

        public override string ToString()
        {
            return "{ "
            + "id:" + Id + ","
            + "conditionType:" + ConditionType + ","
            + "listener:" + Listener + ","
            + "compareType:" + CompareType + ","
            + "dynamicCondition:" + DynamicCondition + ","
            + "checkValue:" + CheckValue + ","
            + "tips:" + Tips + ","
            + "}";
        }

        partial void EndRef();
    }

}

