
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using Luban;


namespace ET
{
    [EnableClass]
    public sealed partial class ConditionGroupConfig : Luban.BeanBase
    {
        public ConditionGroupConfig(ByteBuf _buf) 
        {
            Id = (EConditionGroupId)_buf.ReadInt();
            UseGroup = _buf.ReadBool();
            {int n0 = System.Math.Min(_buf.ReadSize(), _buf.Size);CheckGroups = new System.Collections.Generic.List<EConditionGroupId>(n0);for(var i0 = 0 ; i0 < n0 ; i0++) { EConditionGroupId _e0;  _e0 = (EConditionGroupId)_buf.ReadInt(); CheckGroups.Add(_e0);}}
            OperationType = (EOperatorType)_buf.ReadInt();
            {int n0 = System.Math.Min(_buf.ReadSize(), _buf.Size);CheckList = new System.Collections.Generic.List<ConditionCheckData>(n0);for(var i0 = 0 ; i0 < n0 ; i0++) { ConditionCheckData _e0;  _e0 = global::ET.ConditionCheckData.DeserializeConditionCheckData(_buf); CheckList.Add(_e0);}}

            EndInit();
        }

        public static ConditionGroupConfig DeserializeConditionGroupConfig(ByteBuf _buf)
        {
            return new ConditionGroupConfig(_buf);
        }

        /// <summary>
        /// 分组ID
        /// </summary>
        public readonly EConditionGroupId Id;
        /// <summary>
        /// 是否使用组判断
        /// </summary>
        public readonly bool UseGroup;
        /// <summary>
        /// 如果是组判断,这里需要填写判断的组的id
        /// </summary>
        public readonly System.Collections.Generic.List<EConditionGroupId> CheckGroups;
        public System.Collections.Generic.List<ConditionGroupConfig> CheckGroups_Ref;
        /// <summary>
        /// 与或类型
        /// </summary>
        public readonly EOperatorType OperationType;
        /// <summary>
        /// 判断值
        /// </summary>
        public readonly System.Collections.Generic.List<ConditionCheckData> CheckList;
    
        public const int __ID__ = -742913370;
        public override int GetTypeId() => __ID__;

        public  void ResolveRef()
        {
            CheckGroups_Ref = new System.Collections.Generic.List<ConditionGroupConfig>();
            foreach (var _v in CheckGroups) { CheckGroups_Ref.Add(ConditionGroupConfigCategory.Instance.GetOrDefault(_v)); }

            foreach (var _e in CheckList) { _e?.ResolveRef(); }
            EndRef();
        }

        public override string ToString()
        {
            return "{ "
            + "id:" + Id + ","
            + "useGroup:" + UseGroup + ","
            + "checkGroups:" + Luban.StringUtil.CollectionToString(CheckGroups) + ","
            + "operationType:" + OperationType + ","
            + "checkList:" + Luban.StringUtil.CollectionToString(CheckList) + ","
            + "}";
        }

        partial void EndRef();
    }

}

