
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using Luban;


namespace ET
{
    [EnableClass]
    public sealed partial class NumericValueLimitConfig : Luban.BeanBase
    {
        public NumericValueLimitConfig(ByteBuf _buf) 
        {
            Id = (ENumericType)_buf.ReadInt();
            Min = global::ET.NumericValueLimitData.DeserializeNumericValueLimitData(_buf);
            Max = global::ET.NumericValueLimitData.DeserializeNumericValueLimitData(_buf);
            Priority = _buf.ReadInt();

            EndInit();
        }

        public static NumericValueLimitConfig DeserializeNumericValueLimitConfig(ByteBuf _buf)
        {
            return new NumericValueLimitConfig(_buf);
        }

        /// <summary>
        /// 数值id
        /// </summary>
        public readonly ENumericType Id;
        /// <summary>
        /// 最小限制
        /// </summary>
        public readonly NumericValueLimitData Min;
        /// <summary>
        /// 最大限制
        /// </summary>
        public readonly NumericValueLimitData Max;
        /// <summary>
        /// 优先级
        /// </summary>
        public readonly int Priority;
    
        public const int __ID__ = -121457223;
        public override int GetTypeId() => __ID__;

        public  void ResolveRef()
        {
            Min?.ResolveRef();
            Max?.ResolveRef();
            EndRef();
        }

        public override string ToString()
        {
            return "{ "
            + "id:" + Id + ","
            + "min:" + Min + ","
            + "max:" + Max + ","
            + "priority:" + Priority + ","
            + "}";
        }

        partial void EndRef();
    }

}

